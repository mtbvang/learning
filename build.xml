<?xml version="1.0" encoding="UTF-8"?>

<project name="devhost"
         default="default"
         phingVersion="2.8.0"
         description="Test and build the puppet module. Note all test related targets need to be run from within the vagrant virtual machine.">

	<property environment="env" />
	<property name="build.dir" value="${project.basedir}" />

	<property name="image.version" value="14.04" />
	<property name="image.name" value="ubuntu-vagrant" />

	<property name="option.localtime"
	          value="/usr/share/zoneinfo/Europe/Copenhagen" />

	<target name="default"
	        description="Prints out available targets in this project.">
		<exec command="phing -l" passthru="true" />
		<echo msg="testing=${testing}" />
	</target>

	<target name="build-init" description="Initialization tasks">
		<mkdir dir="build" />
	</target>

	<target name="build-clean" description="Removes the build dir.">
		<delete dir="build" />
	</target>


	<!-- Vagrant related targets -->

	<target name="vagrant-provision-smoketest"
	        description="Run all provisioners on the vagrant smoketest machine.">
		<exec command="export VAGRANT_LOCAL_TIME=${option.localtime}; vagrant provision smoketest"
		      passthru="true" />
	</target>

	<target name="vagrant-export-ssh-config"
	        depends="build-init"
	        description="Dumps the vagrant ssh configs to ssh-config file.">
		<exec command="vagrant ssh-config > build/vagrant-ssh" passthru="true" />
	</target>

	<!-- Docker related targets -->

	<target name="docker-inspect"
	        description="Gets the specified attribute value for the specified container. A container id or name must be passed in using option.container.id argument and a formate string e.g. .NetworkSettings.IPAddress using option.inspect.format argument.">
		<exec command="docker inspect --format '{{ ${option.inspect.format} }}' ${option.container.id}"
		      passthru="true" />
	</target>

	<target name="docker-container-ip"
	        description="Gets the IP for the specified container. A container id must be passed in using option.container.id argument.">
		<exec command="docker inspect --format '{{ .NetworkSettings.IPAddress }}' ${option.container.id}"
		      passthru="true" />
	</target>

</project>
