<?xml version="1.0" encoding="UTF-8"?>

<project name="devhost"
         default="default"
         phingVersion="2.8.0"
         description="Test and build the puppet module. Note all test related targets need to be run from within the vagrant virtual machine.">

	<property environment="env" />
	<property name="build.dir" value="${project.basedir}" />

	<property name="image.version" value="14.04" />
	<property name="image.name" value="ubuntu-vagrant" />

	<property name="option.localtime"
	          value="/usr/share/zoneinfo/Europe/Copenhagen" />

	<target name="default"
	        description="Prints out available targets in this project.">
		<exec command="phing -l" passthru="true" />
		<echo msg="testing=${testing}" />
	</target>

	<target name="build-init" description="Initialization tasks">
		<mkdir dir="build" />
	</target>

	<target name="build-clean" description="Removes the build dir.">
		<delete dir="build" />
	</target>


	<!-- Vagrant related targets -->

	<target name="vagrant-provision-smoketest"
	        description="Run all provisioners on the vagrant smoketest machine.">
		<exec command="export VAGRANT_LOCAL_TIME=${option.localtime}; vagrant provision smoketest"
		      passthru="true" />
	</target>

	<target name="vagrant-rebuild" description="Runs vagrant destroy and up">
		<exec command="vagrant destroy -f &amp;&amp; vagrant up" passthru="true" />
	</target>

	<target name="vagrant-export-ssh-config"
	        depends="build-init"
	        description="Dumps the vagrant ssh configs to ssh-config file.">
		<exec command="vagrant ssh-config > build/vagrant-ssh" passthru="true" />
	</target>

	<!-- Docker related targets -->

	<target name="docker-inspect"
	        description="Gets the specified attribute value for the specified container. A container id or name must be passed in using option.container.id argument and a formate string e.g. .NetworkSettings.IPAddress using option.inspect.format argument.">
		<exec command="docker inspect --format '{{ ${option.inspect.format} }}' ${option.container.id}"
		      passthru="true" />
	</target>

	<target name="docker-container-ip"
	        description="Gets the IP for the specified container. A container id must be passed in using option.container.id argument.">
		<exec command="docker inspect --format '{{ .NetworkSettings.IPAddress }}' ${option.container.id}"
		      passthru="true" />
	</target>

	<target name="docker-start-skydns"
	        description="Pulls down and runs skydns. Run the docker-start-skydock target that depends on this to get both up and running in the correct order.">
		<exec command="sudo docker run -d -p 172.17.42.1:53:53/udp --name skydns crosbymichael/skydns -nameserver 8.8.8.8:53 -domain local"
		      passthru="true" />
	</target>

	<target name="docker-start-skydock"
	        depends="docker-start-skydns"
	        description="Pulls down and runs skydock.">
		<exec command="sudo docker run -d -v /var/run/docker.sock:/docker.sock --name skydock crosbymichael/skydock -ttl 30 -environment dev -s /docker.sock -domain local -name skydns"
		      passthru="true" />
	</target>

	<target name="docker-daemon"
	        depends=""
	        description="Restart the docker daemon with extra options in this terminal. Required for service discovery with skydns, consul, etc. takes option.docker.extra argument">
		<property name="option.docker.extra"
		          value="--bip=172.17.42.1/16 --dns=172.17.42.1" />
		<exec command="sudo service docker stop " passthru="true" />
		<exec command="sudo docker -d -H unix:///var/run/docker.sock ${option.docker.extra}"
		      passthru="true" />
	</target>

	<target name="docker-start-consul"
	        description="Pulls down and runs progrium/docker-consul container in single instance mode. Web UI on localhost:8500.">
		<exec command="sudo nohup docker run -d -h node1 --name consul  -p 8300:8300  -p 8301:8301  -p 8301:8301/udp  -p 8302:8302  -p 8302:8302/udp  -p 8400:8400  -p 8500:8500  -p 172.17.42.1:53:53/udp  progrium/consul -server -bootstrap -ui-dir /ui &amp;"
		      passthru="true" />
	</target>
	
	<target name="app-start"
	          description="Runs the application with nodemon. It's accessible from your local host on http://localhost:3002.">
	    <exec command="nodemon bin/www"
	          passthru="true" />
	  </target>

</project>
